# Generated by Django 5.2.5 on 2025-10-16 11:54

import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('project_profiling', '0018_add_lot_size_field'),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplexityMultiplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_category', models.CharField(choices=[('PUB', 'Public'), ('PRI', 'Private'), ('REN', 'Renovation'), ('NEW', 'New Build')], max_length=3, unique=True)),
                ('multiplier', models.DecimalField(decimal_places=2, help_text='Cost multiplier for this project category', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.1')), django.core.validators.MaxValueValidator(Decimal('5.0'))])),
                ('description', models.TextField(blank=True, help_text='Explanation of why this multiplier is used')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['project_category'],
            },
        ),
        migrations.CreateModel(
            name='LocationMultiplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Metro Manila, Cebu, Davao', max_length=100)),
                ('keywords', models.TextField(help_text='Comma-separated keywords to match in location field (e.g., Manila, Makati, Quezon City)')),
                ('multiplier', models.DecimalField(decimal_places=2, help_text='Cost multiplier for this location', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.1')), django.core.validators.MaxValueValidator(Decimal('5.0'))])),
                ('is_default', models.BooleanField(default=False, help_text='Use this multiplier when no other location matches')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-is_default', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SizeMultiplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Small, Medium, Large', max_length=50)),
                ('min_size', models.DecimalField(decimal_places=2, help_text='Minimum lot size in square meters', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('max_size', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum lot size in square meters (leave blank for no limit)', max_digits=10, null=True)),
                ('multiplier', models.DecimalField(decimal_places=2, help_text='Cost multiplier (e.g., 1.3 = 30% increase, 0.8 = 20% decrease)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.1')), django.core.validators.MaxValueValidator(Decimal('5.0'))])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['min_size'],
            },
        ),
        migrations.AddField(
            model_name='projecttype',
            name='base_cost_high_end',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Base cost per sqm for high-end projects (PHP)', max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='projecttype',
            name='base_cost_low_end',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Base cost per sqm for low-end projects (PHP)', max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='projecttype',
            name='base_cost_mid_range',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Base cost per sqm for mid-range projects (PHP)', max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='projecttype',
            name='contingency_percentage',
            field=models.DecimalField(decimal_places=2, default=10.0, help_text='Percentage of total cost for contingency', max_digits=5),
        ),
        migrations.AddField(
            model_name='projecttype',
            name='equipment_percentage',
            field=models.DecimalField(decimal_places=2, default=10.0, help_text='Percentage of total cost for equipment', max_digits=5),
        ),
        migrations.AddField(
            model_name='projecttype',
            name='labor_percentage',
            field=models.DecimalField(decimal_places=2, default=30.0, help_text='Percentage of total cost for labor', max_digits=5),
        ),
        migrations.AddField(
            model_name='projecttype',
            name='materials_percentage',
            field=models.DecimalField(decimal_places=2, default=40.0, help_text='Percentage of total cost for materials', max_digits=5),
        ),
        migrations.AddField(
            model_name='projecttype',
            name='overhead_percentage',
            field=models.DecimalField(decimal_places=2, default=5.0, help_text='Percentage of total cost for overhead', max_digits=5),
        ),
        migrations.AddField(
            model_name='projecttype',
            name='permits_percentage',
            field=models.DecimalField(decimal_places=2, default=5.0, help_text='Percentage of total cost for permits', max_digits=5),
        ),
        migrations.CreateModel(
            name='CostBreakdownTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_type', models.CharField(choices=[('residential', 'Residential'), ('commercial', 'Commercial'), ('industrial', 'Industrial'), ('infrastructure', 'Infrastructure'), ('renovation', 'Renovation')], max_length=20)),
                ('complexity_level', models.CharField(choices=[('low_end', 'Low End (Basic)'), ('mid_range', 'Mid Range (Standard)'), ('high_end', 'High End (Premium)')], max_length=10)),
                ('materials_percentage', models.DecimalField(decimal_places=2, default=40.0, max_digits=5)),
                ('labor_percentage', models.DecimalField(decimal_places=2, default=30.0, max_digits=5)),
                ('equipment_percentage', models.DecimalField(decimal_places=2, default=10.0, max_digits=5)),
                ('permits_percentage', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('contingency_percentage', models.DecimalField(decimal_places=2, default=10.0, max_digits=5)),
                ('overhead_percentage', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['project_type', 'complexity_level'],
                'unique_together': {('project_type', 'complexity_level')},
            },
        ),
        migrations.CreateModel(
            name='CostConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_type', models.CharField(choices=[('residential', 'Residential'), ('commercial', 'Commercial'), ('industrial', 'Industrial'), ('infrastructure', 'Infrastructure'), ('renovation', 'Renovation')], max_length=20)),
                ('complexity_level', models.CharField(choices=[('low_end', 'Low End (Basic)'), ('mid_range', 'Mid Range (Standard)'), ('high_end', 'High End (Premium)')], max_length=10)),
                ('base_cost_per_sqm', models.DecimalField(decimal_places=2, help_text='Base cost per square meter in PHP', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['project_type', 'complexity_level'],
                'unique_together': {('project_type', 'complexity_level')},
            },
        ),
    ]
